---
# pushover.net account key and app key
# required for push notifications
pushover_key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
pushover_app: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy

# the pot that your bills are paid from
# if omitted then it's assumed that the bills are paid from the
# account itself.
pot: Bills

# note that withdrawals and deposits are only possible via the API
# for pots, it's not possible to transfer funds from one account
# to another.

# the account that your salary is paid into, if omitted it is assumed
# to be the account this config file is for
# salary_account: Current

# strings to match in the description field of the transaction
# for your salary payments. supports multiple to handle people
# changing jobs or if the work payment system gets changed.

# only the most recent salary payment is searched for.
salary_description:
 - SALARY EMPLOYER A
 - SALARY EMPLOYER B

# the day of the month on which your salary is paid
# the code assumes that the payment will be made by or on this date
# so in the case of weekends or bank holidays it may be earlier
salary_payment_day: 15

# name of the Flex account
flex_account: Flex

# the day of the month that your Flex card payment is made
flex_payment_date: 16

# automatically withdraw funds if the pot has more credit than required
auto_withdraw: false

# automatically deposit funds if the pot has a shortfall
auto_deposit: false

# prompt the user to withdraw credit funds
# note: this only works if running interactively, otherwise it is ignored
prompt_withdraw: false

# prompt the user to deposit funds for a shortfall
# only works if running interactively
prompt_deposit: false

# notify the user via push message if there is a shortfall
notify_shortfall: true

# notify the user via push message if the pot is in credit
notify_credit: false

# notify when funds are withdrawn from the pot
notify_withdraw: false

# notify when funds are deposited into the pot
notify_deposit: false

# lists of payments to track
payments:

# supported payment types are:
# - Card payment
# - Direct Debit
# - Standing Order
# - Finance
# - Flex
# - Amazon Payments
#
# See below for examples

# indicate when a refund is pending
# this amount will be deducted from the total due in the salary period
# immediately after its due_after date
# WARNING: if the refund comes towards the end of your salary period you
# could end up with insufficient funds for some outgoings
# use with caution
refunds_due:

    - name: DVLA Overpayment # name of the refund due for your reference
      desc: DVLA-AA01AAA     # string to match in the description field
      due_after: 2023-11-15  # refund is due after this date
      amount: 34.59          # refund amount

- type: Card payment

  payments:

      # name for the payment so you can easily see what it is
    - name: AWS

      # amount of the transaction in £. this can be approximate if the exact
      # amount isn't known, eg for foreign currency transactions.
      # by defauly this value is only used if there is no previous transaction,
      # if a previous transaction is found that value will be used instead.
      amount: 1.50

      # if fixed is set to true the value is fixed at the set amount and any
      # previous transaction is ignored
      # fixed: true

      # string to match in the description field to identify the transaction
      desc: AWS EMEA aws.amazon.co

      # if the description field changes over time you can specify multiple values
      # desc:
      #   - AWS LUX AWS
      #   - AWS EMEA LUX AWS

      # if the payment is made yearly you can indicate this by specifying the
      # month and day of the yearly payment
      # yearly_month: 11
      # yearly_day: 13

      # if the subscription is long-running, eg a few years, you can indicate
      # this by specifying a fixed renewal date:
      # renew_date: 2027-05-28

      # if payments are beginning in the future you can specify a start date
      # start_date: 2023-12-01

      # if payments are not made in some months you can exclude months by number
      # this is handy for bills like council tax which is not charged during
      # Feb/Mar
      # exclude_months: [2,3]

      # for renewals where the price is changing you can append a renewal block to indicate this
      # renewal:
        # date: 2024-01-16        # date of renewal taking effect
        # first_payment: 168.76   # set this if the first payment on the renewal date is different
        # amount: 166.65          # new regular amount

# config for Amazon Payments purchases (not Barclays Partner Finance for Amazon)
# this is intended for Amazon's own financing where you pay over 5 monthly payments
# with 0% interest
- type: Amazon Payments

  # day of the month that payments are taken
  payment_day: 1

  payments:

    - name: My amazon product  # name for your reference
      amount: 114.44           # total amount to pay
      months: 5                # how many months this is split over
      start_date: 2023-11-05   # date purchased
      desc:                    # string to match in the description of the transaction

# config parameters for direct debits is the same as for Card payments
- type: Direct Debit

  payments:

# config parameters for standing orders is the same as for Card payments,
# the only thing of note is that you probably want fixed: true for all
# standing orders as they tend to be fixed value
- type: Standing Order

  payments:

    - name: Credit card
      amount: 50
      desc: '1234123412341234'
      fixed: true

# generic finance payment type, this should be usable for pretty much any
# kind of finance agreement. the example shown is for an iPhone purchase
# using Barclays Partner Finance

- type: Finance

  payments:

    - name: iPhone 14
      amount: 35.44
      desc: BARCLAYS PRTNR FIN CARDIFF GBR
      fixed: true
      start_date: 2023-02-21
      months: 24

# Flex payments are configured similarly to finance payments, simply add
# the number of months the payment is Flex'd over. this can be 1 for
# purchases that will be paid off in full at the next payment date

- type: Flex

  payments:

    - name: Thing I bought
      amount: 120
      start_date: 2023-10-22
      months: 3
